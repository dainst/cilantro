version: '3.5'

x-env-dirs: &env-dirs
  REPOSITORY_DIR: /data/repository
  WORKING_DIR: /data/workspace
  STAGING_DIR: /data/staging
  CONFIG_DIR: /config
  RESOURCES_DIR: /app/resources
  ARCHIVE_DIR: /data/archive

x-env-broker: &env-broker
  BROKER_HOST: "broker"
  BROKER_USER: &broker-user user
  BROKER_PASSWORD: &broker-password password

x-env-jobdb: &env-jobdb
  JOB_DB_URL: job-db
  JOB_DB_PORT: 27017
  JOB_DB_NAME: job_database
  FIRST_OBJECT_ID: 1000

x-env-app-config: &env-app-config
  BACKEND_URI: &backend-uri https://workbench.test.idai.world/api
  CILANTRO_ENV: &cilantro-env test
  OJS_URI: &ojs-uri https://ojs.test.idai.world/plugins/generic/ojs-cilantro-plugin/api
  OMP_URI: &omp-uri http://test.publications.dainst.org/books/plugins/generic/cilantro/api
  ATOM_URI: &atom-uri http://archivestest.dainst.org/index.php
  REPOSITORY_URI: &repository-uri https://workbench.test.idai.world/api/repository

services:

  broker:
    image: rabbitmq:latest
    environment:
      RABBITMQ_DEFAULT_USER: *broker-user
      RABBITMQ_DEFAULT_PASS: *broker-password

  celery-db:
    image: redis:latest
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data

  job-db:
    image: mongo
    volumes:
      - mongo-data:/data

  service:
    image: dainst/cilantro-service:0.2.13
    volumes:
      - staging-data:/data/staging
      - repository-data:/data/repository
      - config:/config
    working_dir: /app
    environment:
      <<: *env-dirs
      <<: *env-broker
      <<: *env-jobdb
      DB_HOST: "celery-db"
      CILANTRO_ENV: *cilantro-env
      BACKEND_URI: *backend-uri
      ATOM_URI: *atom-uri
    networks:
      - web
      - default
    deploy:
      labels:
        - "traefik.docker.network=web"
        - "traefik.enable=true"
        - "traefik.frontend.rule=Host:workbench.test.idai.world; PathPrefixStrip:/api"
        - "traefik.port=5000"
    secrets:
      - atom_api_key

  default-worker:
    user: ${UID}
    image: dainst/cilantro-default-worker:0.2.11
    working_dir: /app
    volumes:
      - staging-data:/data/staging
      - workspace-data:/data/workspace
      - archive-data:/data/archive
      - repository-data:/data/repository
      - config:/config
    environment:
      <<: *env-dirs
      <<: *env-broker
      <<: *env-jobdb
      DB_HOST: "celery-db"
      CILANTRO_ENV: *cilantro-env
      BACKEND_URI: *backend-uri
      OJS_URI: *ojs-uri
      OMP_URI: *omp-uri
      ATOM_URI: *atom-uri
      REPOSITORY_URI: *repository-uri
    secrets:
      - ojs_auth_key
      - omp_auth_key
      - atom_api_key

  convert-worker:
    user: ${UID}
    image: dainst/cilantro-convert-worker:0.2.10
    working_dir: /app
    volumes:
      - workspace-data:/data/workspace
      - config:/config
    environment:
      <<: *env-dirs
      <<: *env-broker
      <<: *env-jobdb
      DB_HOST: "celery-db"
      CILANTRO_ENV: *cilantro-env

  nlp-heideltime-worker:
    user: ${UID}
    image: dainst/cilantro-nlp-heideltime-worker:0.1.9
    working_dir: /app
    volumes:
      - workspace-data:/data/workspace
      - config:/config
    environment:
      <<: *env-dirs
      <<: *env-broker
      <<: *env-jobdb
      DB_HOST: "celery-db"
      CILANTRO_ENV: *cilantro-env

  frontend:
    image: dainst/cilantro-frontend:0.2.15
    networks:
      - default
      - web
    deploy:
      labels:
        - "traefik.docker.network=web"
        - "traefik.enable=true"
        - "traefik.frontend.rule=Host:workbench.test.idai.world"
        - "traefik.port=80"

  pdf-viewer:
    image: dainst/cilantro-dai-book-viewer:latest
    volumes:
      - repository-data:/usr/share/nginx/html/documents
    networks:
      - web
    deploy:
      labels:
        - "traefik.docker.network=web"
        - "traefik.enable=true"
        - "traefik.frontend.rule=Host:viewer.test.idai.world"
        - "traefik.port=80"

secrets:
  ojs_auth_key:
    external: true
    name: workbench_ojs_auth_key
  omp_auth_key:
    external: true
    name: workbench_omp_auth_key
  atom_api_key:
    external: true
    name: workbench_atom_api_key

volumes:
  mongo-data:
    name: workbench_mongo_data
    external: true
  redis-data:
  workspace-data:
  repository-data:
    name: workbench_repository_data
    external: true
  archive-data:
    name: workbench_archive_data
    external: true
  staging-data:
    name: workbench_staging_data
    external: true
  config:
    name: workbench_config
    external: true

networks:
  web:
    external: true
