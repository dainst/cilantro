{% set metadata = obj.metadata.to_dict() %}
{% set repo_dir = environ['REPOSITORY_DIR'] %}
{% set server_url = environ['BACKEND_URI'] %}
<?xml version="1.0" encoding="UTF-8"?>
<mets:mets
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:xlink="http://www.w3.org/1999/xlink"
    xmlns:mets="http://www.loc.gov/METS/"
    xmlns:mods="http://www.loc.gov/mods/v3"
    xmlns:dv="http://dfg-viewer.de/"
    xsi:schemaLocation="http://www.loc.gov/METS/ http://www.loc.gov/mets/mets.xsd
        http://www.loc.gov/mods/v3 http://www.loc.gov/standards/mods/v3/mods-3-2.xsd">

    <mets:metsHdr LASTMODDATE="{{datetime.utcnow().isoformat()}}">
        <mets:agent ROLE="CREATOR" TYPE="ORGANIZATION">
            <mets:name>Deutsches Archäologisches Institut</mets:name>
        </mets:agent>
    </mets:metsHdr>

    <mets:dmdSec ID="dmd001">
        <mets:mdWrap MIMETYPE="text/xml" MDTYPE="MODS">
            <mets:xmlData>
                <mods:mods>
                    <mods:titleInfo>
                        <mods:title>{{metadata['title']}}</mods:title>
                    </mods:titleInfo>
                    {%- for author_item in metadata['author'] -%}
                    <mods:name type="personal">
                        <mods:displayForm>{{author_item['firstname']}} {{author_item['lastname']}}</mods:displayForm>
                        <mods:role>
                            <mods:roleTerm authority="marcrelator" type="code">aut</mods:roleTerm>
                            <mods:roleTerm type="text">Author</mods:roleTerm>
                        </mods:role>
                    </mods:name>
                    {% endfor %}
                </mods:mods>
            </mets:xmlData>
        </mets:mdWrap>
    </mets:dmdSec>

    <mets:amdSec ID="amd1">
        <mets:rightsMD ID="rights1">
            <mets:mdWrap MIMETYPE="text/xml" MDTYPE="OTHER" OTHERMDTYPE="DVRIGHTS">
                <mets:xmlData>
                    <dv:rights>
                        <dv:owner>Deutsches Archäologisches Institut</dv:owner>
                        <dv:ownerLogo>https://www.dainst.org/image/company_logo?img_id=11201</dv:ownerLogo>
                        <dv:ownerSiteURL>https://dainst.org</dv:ownerSiteURL>
                    </dv:rights>
                </mets:xmlData>
            </mets:mdWrap>
        </mets:rightsMD>
    </mets:amdSec>

    <mets:fileSec>
        <mets:fileGrp USE="DEFAULT">
            {% for file_path in glob(obj.get_representation_dir('jpg') + '/*.jpg')|sort() %}
                <mets:file ID="file{{loop.index}}" MIMETYPE="image/jpeg">
                    {% set new_file_path = server_url + '/repository/file/' + obj.get_parent().metadata.ojs_id + file_path.split('parts')[1] %}
                    <mets:FLocat LOCTYPE="URL" xlink:href="{{new_file_path}}"/>
                </mets:file>
            {% endfor %}
        </mets:fileGrp>
        <mets:fileGrp USE="THUMBS">
            {% for file_path in glob(path_join(obj.get_representation_dir('jpg'), 'thumbnails') + '/*.jpg')|sort() %}
                <mets:file ID="thumb_file{{loop.index}}" MIMETYPE="image/jpeg">
                   {% set new_file_path = server_url + '/repository/file/' + obj.get_parent().metadata.ojs_id + file_path.split('parts')[1] %}
                    <mets:FLocat LOCTYPE="URL" xlink:href="{{new_file_path}}"/>
                </mets:file>
            {% endfor %}
        </mets:fileGrp>
        <mets:fileGrp USE="DOWNLOAD">
            <mets:file ID="PDF1" MIMETYPE="application/pdf">
                {% set new_path = server_url + '/repository/file/' + obj.get_parent().metadata.ojs_id + obj.get_representation_dir('origin').split('parts')[1] %}
                <mets:FLocat LOCTYPE="URL" xlink:href="{{path_join(new_path, 'merged.pdf')}}"/>
            </mets:file>
        </mets:fileGrp>
    </mets:fileSec>

    <mets:structMap TYPE="PHYSICAL">
        <mets:div ID="struct_phys_001" TYPE="physSequence">
            <mets:fptr FILEID="PDF1"/>
            {% for file_path in glob(obj.get_representation_dir('jpg') + '/*.jpg')|sort() %}
                <mets:div ID="div{{loop.index}}" ORDER="{{loop.index}}" ORDERLABEL="{{loop.index}}" TYPE="page">
                    <mets:fptr FILEID="file{{loop.index}}"/>
                </mets:div>
            {% endfor %}
        </mets:div>
    </mets:structMap>

    <mets:structMap TYPE="LOGICAL">
        <mets:div ID="struct_log_001" DMDID="dmd001" TYPE="monograph" LABEL="{{metadata['title']}}">
            <mets:fptr FILEID="PDF1"/>
        </mets:div>
    </mets:structMap>

</mets:mets>
