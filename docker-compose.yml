version: '3.5'

x-env-dirs: &env-dirs
  REPOSITORY_DIR: /data/repository
  WORKING_DIR: /data/workspace
  STAGING_DIR: /data/staging
  CONFIG_DIR: /config
  RESOURCES_DIR: /app/resources
  ARCHIVE_DIR: /data/archive

x-env-broker: &env-broker
  BROKER_HOST: broker
  BROKER_USER: &broker-user user
  BROKER_PASSWORD: &broker-password password

x-env-jobdb: &env-jobdb
  JOB_DB_URL: job-db
  JOB_DB_PORT: 27017
  JOB_DB_NAME: job_database
  FIRST_OBJECT_ID: 1373245

x-env-app-config: &env-app-config
  BACKEND_URI: &backend-uri http://localhost:5000
  CILANTRO_ENV: &cilantro-env development
  OJS_BASE_URL: &ojs-base-url http://mock-server:8080/ojs
  OJS_URI: &ojs-uri http://mock-server:8080/ojs/plugins/generic/ojs-cilantro-plugin/api
  OJS_AUTH_KEY: &ojs-auth-key ${OJS_AUTH_KEY}
  OMP_URI: &omp-uri http://mock-server:8080/omp/plugins/generic/cilantro/api
  OMP_AUTH_KEY: &omp-auth-key ${OMP_AUTH_KEY}
  ATOM_URI: &atom-uri http://mock-server:8080/atom
  ATOM_API_KEY: &atom-api-key ${ATOM_API_KEY}
  REPOSITORY_URI: &repository-uri http://service:5000/repository

services:

  broker:
    image: rabbitmq:3.8
    environment:
      RABBITMQ_DEFAULT_USER: *broker-user
      RABBITMQ_DEFAULT_PASS: *broker-password

  db:
    image: redis:latest
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - ./redis-data:/data

  job-db:
    container_name: job_db
    image: mongo:5.0.1
    volumes:
      - ./mongo-data:/data/db

  service:
    container_name: cilantro_service
    user: ${UID}
    build:
      context: .
      dockerfile: ./docker/cilantro-service/Dockerfile
    ports:
      - "5000:5000"
    working_dir: /app
    volumes:
      - .:/app
      - ./data:/data
      - ./config:/config
    environment:
      <<: [*env-dirs, *env-broker, *env-jobdb]
      DB_HOST: db
      CILANTRO_ENV: *cilantro-env
      BACKEND_URI: *backend-uri
      ATOM_URI: *atom-uri
      ATOM_API_KEY: *atom-api-key
      OJS_BASE_URL: *ojs-base-url
      REPOSITORY_URI: *repository-uri

  default-worker:
    container_name: cilantro_default_worker
    user: ${UID}
    build:
      context: .
      dockerfile: ./docker/cilantro-default-worker/Dockerfile
    working_dir: /app
    volumes:
      - .:/app
      - ./data:/data
      - ./config:/config
    environment:
      <<: [*env-dirs, *env-broker, *env-jobdb]
      DB_HOST: db
      CILANTRO_ENV: *cilantro-env
      BACKEND_URI: *backend-uri
      OJS_URI: *ojs-uri
      OJS_AUTH_KEY: *ojs-auth-key
      OMP_URI: *omp-uri
      OMP_AUTH_KEY: *omp-auth-key
      ATOM_URI: *atom-uri
      ATOM_API_KEY: *atom-api-key
      REPOSITORY_URI: *repository-uri

  convert-worker:
    container_name: cilantro_convert_worker
    user: ${UID}
    build:
      context: .
      dockerfile: ./docker/cilantro-convert-worker/Dockerfile
    working_dir: /app
    volumes:
      - .:/app
      - ./data:/data
      - ./config:/config
    environment:
      <<: [*env-dirs, *env-broker, *env-jobdb]
      DB_HOST: db
      CILANTRO_ENV: *cilantro-env

  nlp-heideltime-worker:
    container_name: cilantro_nlp_heideltime_worker
    user: ${UID}
    build:
      context: .
      dockerfile: ./docker/cilantro-nlp-heideltime-worker/Dockerfile
    working_dir: /app
    volumes:
      - .:/app
      - ./data:/data
      - ./config:/config
    environment:
      <<: [*env-dirs, *env-broker, *env-jobdb]
      DB_HOST: db
      CILANTRO_ENV: *cilantro-env

  nlp-worker:
    container_name: cilantro_nlp_worker
    user: ${UID}
    build:
      context: .
      dockerfile: ./docker/cilantro-nlp-worker/Dockerfile
    working_dir: /app
    volumes:
      - .:/app
      - ./data:/data
      - ./config:/config
    environment:
      <<: [*env-dirs, *env-broker, *env-jobdb]
      DB_HOST: db
      CILANTRO_ENV: *cilantro-env

  mock-server:
    image: rodolpheche/wiremock:latest
    user: ${UID}
    volumes:
      - ./test/wiremock_config:/home/wiremock
